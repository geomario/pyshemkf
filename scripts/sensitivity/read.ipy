###############################################################################
#                        Read data for sensitivity analysis                   #
###############################################################################

import os
import numpy as np
import sensitivityarrays as sa
from mypackage.plot import specs as sc
from mypackage.run import runmodule as rm
from mypackage.run import pythonmodule as pm

monitor_file = rm.make_file_dir_names(sc.model_name)[16]

for il, let in enumerate(sc.lets):

    # cd to samples_output directory ##########################################
    os.chdir(rm.make_output_dirs(sc.model_name,sc.dat,let)[1])

    # Read model properties ###################################################
    num_mons = sc.num_mons(sc.model_name,sc.dat,let)

    # Read time and temperature ###############################################
    if let==sc.lets[0]:
        t = np.genfromtxt(monitor_file,
                          dtype='f8', comments='%', usecols=(0)) # obstime
    temp = np.genfromtxt(monitor_file,
                         dtype='f8', comments='%', usecols=(9)) # variable
    # Col 0 in obs_file: obstime
    # Col 9 in obs_file: Temperature

    # Reshape arrays ##########################################################
    if let==sc.lets[0]:
        t = t.reshape(len(t)/num_mons, num_mons)[:,0]
    temp = temp.reshape(len(temp)/num_mons, num_mons)

    # Save arrays #############################################################
    np.save(pm.py_output_filename("truet",sa.tag,"npy",sc.spec(il)),t)
    np.save(pm.py_output_filename('truetemp',sa.tag,'npy',sc.spec(il)),temp)

os.chdir(pm.python_dir)
