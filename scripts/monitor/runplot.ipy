import shutil
import matplotlib.pyplot as plt

from mypackage.plot import specs as sc
import mypackage.monitor.arrays as ma
import mypackage.monitor.plot as mp
import mypackage.monitor.read as mr
import mypackage.run.pythonmodule as pm

# Switches
is_read = 1
is_plot = 1
is_save = 0
is_show = 1
is_backup = 0

# Specs
model_name = 'wavewell'
dat = '2017_12_01'

let = 'a'
nl = 1
ns = rm.get_num_let(let)
nstep = 1
lets = [rm.get_let_num(i) for i in range(ns,ns+nl,nstep)]

mons = range(31,39)

# Read
if is_read:
    for num_mon in mons:
        for varname in ['time','head']:
            numpy_array, numpy_array_name = mr.read(model_name,
                                                    dat,
                                                        lets[0],
                                                        fname = model_name.upper()+'_TRUE_E0_monitor_1.dat',
                                                        varname = varname,
                                                        num_mon = num_mon,   # from 1 til num-mons
                                                        )
            np.save(numpy_array_name,numpy_array)
            print('Saved as ' + numpy_array_name)

# Plot
if is_plot:

    # Figure
    fig = plt.figure(1,figsize=[15,10])

    # Run plot function
    for num_mon in mons:
        ax, pic_name = mp.plot(fig.add_subplot(1,1,1),
                               model_name,
                               dat,
                                   lets[0],
                                   is_labels=  True,
                                   is_ownticks = False,
                                   # markercolor = 'black',
                                   xlims = [0.0,180.0],
                                   ylims = [10.0,10.10],
                                   xlabel = 't [min]',
                                   ylabel = 'h [m]',
                                   pic_format = 'png',
                                   varname = 'head',
                                   num_mon = num_mon,
                                   legend_label = str(num_mon),
                                   )
    # Legend
    plt.legend()

    # Save
    if is_save:
        plt.savefig(pic_name)
        print('Saved as ' + pic_name)

    # Show
    if is_show:
        plt.show()
    else:
        plt.clf()

# Backup
if is_backup:
    pm.py_backup(pm.python_scripts_dir,ma.tag,"runplot","ipy",model_name,dat,lets[0])
