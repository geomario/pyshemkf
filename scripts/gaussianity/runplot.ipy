import numpy as np
import matplotlib.pyplot as plt

from mypackage.tools.plot import specs as sc
import mypackage.scripts.gaussianity.arrays as ga
import mypackage.scripts.gaussianity.plot as gp
import mypackage.scripts.gaussianity.read as gr
import mypackage.tools.run.pythonmodule as pm

# Switches
is_read = 0
is_backup = 0
is_hist = 0
is_save = 0
is_show = 0

model_name = 'model'
which_method = 0
ensemble_size = 250
n_syn = 100
n_comparisons = 1000

# Read
if is_read:
    gauss_array, gauss_array_name = gr.read(
        model_name=model_name,
        which_method=which_method,
        ensemble_size=ensemble_size,
        n_syn=n_syn,
        n_comparisons=n_comparisons,
        )

    np.save(gauss_array_name, gauss_array)
    print('Saved as ' + gauss_array_name)


# Histogram
if is_hist:

    # Figure
    fig = plt.figure('Gaussianity', figsize=[15, 10])

    # Run plot function
    ax, pic_name = gp.hist(
        fig.add_subplot(1, 1, 1),
        model_name=model_name,
        which_method=which_method,
        ensemble_size=ensemble_size,
        n_syn=n_syn,
        n_comparisons=n_comparisons,
    )

    # Save
    if is_save:
        plt.savefig(pic_name)
        print('Saved as ' + pic_name)

    # Show
    if is_show:
        plt.show()
    else:
        plt.clf()

# Backup
if is_backup:
    pm.py_backup(
        pm.python_scripts_dir,
        ga.tag,
        "runplot",
        "ipy",
        sc.specl(model_name,
                 str(which_method),
                 '2010_01_31')
    )
