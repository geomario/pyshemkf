import numpy as np
# import matplotlib.pyplot as plt

# import pskf.scripts.presvel.arrays as pva
# import pskf.scripts.presvel.plot as pvp
import pskf.scripts.presvel.read as pvr
# import pskf.tools.run.pythonmodule as pm
# import pskf.tools.plot.plotfunctions as pf

# Switches
is_read = 0
is_mean = 0
is_rad_ang = 0
# is_plot = 0
# is_save = 0
# is_show = 0
# is_backup = 0

# Specs
model_name = 'model'
dat = '2010_01_30'

let = 'a'

# Read
if is_read:
    numpy_array, numpy_array_name = pvr.read(
        model_name,
        dat,
        let,
    )

    np.save(numpy_array_name, numpy_array)
    print('Saved as ' + numpy_array_name)

# Mean
if is_mean:
    numpy_array, numpy_array_name = pvr.mean(
        model_name,
        dat,
        let,
        befaft='bef',
    )

    np.save(numpy_array_name, numpy_array)
    print('Saved as ' + numpy_array_name)

# rad_ang
if is_rad_ang:
    numpy_array, numpy_array_name = pvr.rad_ang(
        model_name,
        dat,
        let,
        befaft='bef',
    )

    np.save(numpy_array_name, numpy_array)
    print('Saved as ' + numpy_array_name)

# # Plot
# if is_plot:

#     # Figure
#     fig = plt.figure(1, figsize=[15, 10])

#     # Run plot function
#     ax, pic_name = fp.plot(
#         fig.add_subplot(1, 1, 1),
#         model_name,
#         dat,
#         let,
#         varname=varname,
#     )

#     # Monitoring points
#     ax = pf.scatter(
#         ax,
#         model_name,
#         dat,
#         let,
#     )

#     # Colorbar
#     cb_ax = pf.cb(
#         fig.add_subplot(1, 2, 1),
#         ax,
#         varname=varname,
#     )

#     # Save
#     if is_save:
#         plt.savefig(pic_name)
#         print('Saved as ' + pic_name)

#     # Show
#     if is_show:
#         plt.show()
#     else:
#         plt.clf()

# # Backup
# if is_backup:
#     pm.py_backup(
#         pm.python_scripts_dir,
#         fa.tag,
#         "runplot",
#         "ipy",
#         sc.specl(model_name,
#                  dat,
#                  let)
#     )
