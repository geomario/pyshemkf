# Read single cell output

import os
import matplotlib as mpl
import numpy as np
from mypackage.plot import plotfunctions as pf
from mypackage.plot import plotarrays as pa
from matplotlib import cm		# Colormap commands (cm.get_cmap())
from matplotlib import colors	        # Normalize colors (colors.Normalize())
from mypackage.plot import mycolors
from mypackage.run import runmodule as rm
import pandas as pd

is_show = True
is_save = True

# Input array specification
model_name = 'alexdiffshift'
dat = '2016_10_27'
let = 'f'                                 #'b', 'f'
truedat = '2016_10_27'
truelet = 'a'
num_locs = 16
nrobs_int = 150
nm = 3 # Every nmth time step is a measurement

pic_format = 'png'
pic_names = ['single_cell_mean_'+dat+'_'+let,'single_cell_diff_'+dat+'_'+let]

# Observation points and pairs of observations points for differences
points = [0,1,2,3,4,5,6,7,8]#,8,9,10,11,12,13,14,15]#[0,1,2,3,4,5,6,7]
pairs = [[0,4],[1,5],[2,6],[3,7]]#,[8,12],[9,13],[10,14],[11,15]]#[[0,4],[1,5],[2,6],[3,7]]
#[[0,4],[1,5],[2,6],[3,7]]
#[[8,12],[9,13],[10,14],[11,15]]

# Colors (4 blue-ish, 4 red-ish)
coleros = ['b','g','lightblue','cyan','r','chocolate','magenta','orange','b','g','lightblue','cyan','r','chocolate','magenta','orange']

# --------------------------------------------------------------------------------

# Load temperature arrays
temp = np.load('output/presvel/npy/'
                   +'temp_'+dat+'_'+let+'_'+str(num_locs).zfill(4)+'.npy')

truetemp = np.load('output/presvel/npy/'
                    +'truetemp_'+truedat+'_'+truelet+'_'+str(num_locs).zfill(4)+'.npy')

# Load time array
t = np.load('output/presvel/npy/'
                    +'truet_'+truedat+'_'+truelet+'_'+str(num_locs).zfill(4)+'.npy')


# Plot mean values over all 16 measurement locations
plt.figure(1,[20,10], facecolor = 'white')
plt.title('Mean temperatures at observation points', size = 20)
[plt.semilogx(t[1::nm,0][:nrobs_int],np.mean(temp,axis=1)[:,i], 'o', markersize = 5, label = i+1,c=coleros[ip])
     for ip,i in enumerate(points)]
[plt.semilogx(t[:,0],truetemp[:,i], '--', markersize = 5, label = i+1,c=coleros[ip])
     for ip,i in enumerate(points)]
plt.legend()
plt.xlabel('Time',fontsize = 20)
plt.ylabel(r'T  [$^\circ C \,$]',fontsize = 20)
plt.gca().xaxis.set_ticks([10,60,600,3600,24*3600,10*24*3600])
plt.gca().xaxis.set_ticklabels(['10s','1min','10min','1h','1d','10d'])


# Save, show, close
if is_save:
    plt.savefig(os.environ['HOME']+'/PythonDir/output/presvel/'+pic_format+'/'
                    +pic_names[0]+'.'+pic_format)
if is_show:
    plt.show()
else:
    plt.close()


# Plot mean differences over all 16 measurement locations
plt.figure(1,[20,10], facecolor = 'white')
plt.title('Difference of temperatures at certain observation points', size = 20)
[plt.semilogx(t[1::nm,0][:nrobs_int],np.mean(temp,axis=1)[:,pair[0]]-np.mean(temp,axis=1)[:,pair[1]],
              'o', markersize = 5, label = [pair[0]+1,pair[1]+1],
                  c = coleros[i])
    for i,pair in enumerate(pairs)]
[plt.semilogx(t[:,0],truetemp[:,pair[0]]-truetemp[:,pair[1]],
              '--', markersize = 5, label = 'True: ' + str([pair[0]+1,pair[1]+1]),
                  c = coleros[i])
    for i,pair in enumerate(pairs)]
plt.legend()
plt.xlabel('Time',fontsize = 20)
plt.ylabel(r'$\Delta$T  [$^\circ C \,$]',fontsize = 20)
plt.gca().xaxis.set_ticks([10,60,600,3600,24*3600,30*24*3600])
plt.gca().xaxis.set_ticklabels(['10s','1min','10min','1h','1d','30d'])

#Save, show, close
if is_save:
    plt.savefig(os.environ['HOME']+'/PythonDir/output/presvel/'+pic_format+'/'
                    +pic_names[1]+'.'+pic_format)
if is_show:
    plt.show()
else:
    plt.close()
    
