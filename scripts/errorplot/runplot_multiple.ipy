import numpy as np
import matplotlib.pyplot as plt

from pskf.tools.plot import specs as sc
import pskf.scripts.errorplot.arrays as ea
import pskf.scripts.errorplot.plot as ep
import pskf.scripts.errorplot.read as er
import pskf.scripts.errorplot.sort as es
import pskf.tools.run.pythonmodule as pm

# Switches
is_read = 0
is_sort = 0
is_plot = 0
is_quot = 0
is_save = 0
is_show = 0
is_backup = 0

model_name = 'model'
ensemble_sizes = [50, 70, 100, 250]

for which_methods in [[0, 1, 2, 3, 4, 5, 6],
                      [0, 1, 2],
                      [3, 4, 5]]:
    # Read
    if is_read:
        stat_array, stat_array_name = er.read(
            model=model_name,
            which_methods=which_methods,
            ensemble_sizes=ensemble_sizes,
            )

        np.save(stat_array_name, stat_array)
        print('Saved as ' + stat_array_name)

    # Sort
    if is_sort:
        stat_array, stat_array_name, which_methods_sorted = es.sort(
            model_name=model_name,
            which_methods=which_methods,
            ensemble_sizes=ensemble_sizes,
            template_model_name=model_name,
            template_enssize=50,
            template_ensemble_sizes=[50, 70, 100, 250],
            )

        np.save(stat_array_name, stat_array)
        print('Saved as ' + stat_array_name)

    else:
        which_methods_sorted = which_methods

    # Plot
    if is_plot:

        # Figure
        fig = plt.figure('Errorplot', figsize=[18, 10])

        # Run plot function
        ax, pic_name = ep.plot(
            fig.add_subplot(1, 1, 1),
            model=model_name,
            which_methods=which_methods_sorted,
            ensemble_sizes=ensemble_sizes,
        )

        # Save
        if is_save:
            plt.savefig(pic_name)
            print('Saved as ' + pic_name)

        # Show
        if is_show:
            plt.show()
        else:
            plt.clf()

    # Quot
    if is_quot:

        # Figure
        fig = plt.figure('Quotients', figsize=[10, 10])

        # Run plot function
        ax, pic_name = ep.quots(
            fig.add_subplot(1, 1, 1),
            model=model_name,
            which_methods=which_methods_sorted,
        )

        # Save
        if is_save:
            plt.savefig(pic_name)
            print('Saved as ' + pic_name)

        # Show
        if is_show:
            plt.show()
        else:
            plt.clf()


# Backup
if is_backup:
    pm.py_backup(
        pm.python_scripts_dir,
        ea.tag,
        "runplot_multiple",
        "ipy",
        sc.specl(model_name,
                 '_'.join([str(i) for i in which_methods_sorted])[:],
                 '2010_01_30')
    )
