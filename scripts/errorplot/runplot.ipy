import numpy as np
import matplotlib.pyplot as plt

from mypackage.plot import specs as sc
import mypackage.errorplot.arrays as ea
import mypackage.errorplot.plot as ep
import mypackage.errorplot.read as er
import mypackage.errorplot.sort as es
import mypackage.run.pythonmodule as pm

# Switches
is_read = 0
is_sort = 0
is_plot = 0
is_quot = 0
is_save = 0
is_show = 0
is_backup = 0

model_name = 'model'
which_methods = [0, 1, 2, 3, 4, 5, 6]
n_runs = 1000

# Read
if is_read:
    stat_array, stat_array_name = er.read(
        model=model_name,
        which_methods=which_methods,
        n_runs=n_runs,
        )

    np.save(stat_array_name, stat_array)
    print('Saved as ' + stat_array_name)

# Sort
if is_sort:
    stat_array, stat_array_name, which_methods_sorted = es.sort(
        model=model_name,
        which_methods=which_methods,
        n_runs=n_runs,
        template_model=model_name,
        template_which_methods=which_methods,
        template_enssize=50,
        template_n_runs=1000,
        )

    np.save(stat_array_name, stat_array)
    print('Saved as ' + stat_array_name)

else:
    which_methods_sorted = which_methods

# Plot
if is_plot:

    # Figure
    fig = plt.figure('Errorplot', figsize=[18, 10])

    # Run plot function
    ax, pic_name = ep.plot(
        fig.add_subplot(1, 1, 1),
        model=model_name,
        which_methods=which_methods_sorted,
        n_runs=n_runs,
    )

    # Save
    if is_save:
        plt.savefig(pic_name)
        print('Saved as ' + pic_name)

    # Show
    if is_show:
        plt.show()
    else:
        plt.clf()

# Quot
if is_quot:

    # Figure
    fig = plt.figure('Quotients', figsize=[10, 10])

    # Run plot function
    ax, pic_name = ep.quots(
        fig.add_subplot(1, 1, 1),
        model=model_name,
        which_methods=which_methods_sorted,
    )

    # Save
    if is_save:
        plt.savefig(pic_name)
        print('Saved as ' + pic_name)

    # Show
    if is_show:
        plt.show()
    else:
        plt.clf()


# Backup
if is_backup:
    pm.py_backup(
        pm.python_scripts_dir,
        ea.tag,
        "runplot",
        "ipy",
        sc.specl(model_name,
                 '_'.join([str(i) for i in which_methods_sorted])[:],
                 '2010_01_30')
    )
