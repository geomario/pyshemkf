# Plot routine for singlecell pics

import numpy as np

from pskf.tools.run import pythonmodule as pm
from pskf.tools.plot import specs as sc

from pskf.scripts.singlecell import arrays as sca


###############################################################################
#                         Plot single cell array                              #
###############################################################################
def plot(
        ax,
        model_name,
        dat,
        let,
        points=[0, 1, 2, 3],
        is_pairs=0,
        pairs=[[0, 1], [2, 3]],
        is_labels=True,
        is_ownticks=False,
        is_ownticklabels=False,
        axistitle='',
        is_position=True,
        position=[0.1, 0.1, 0.6, 0.8],
        is_ownlims=False,
        xlims=[0, 20],
        ylims=[0.0, 1.0],
        xlabeltext='Time',
        ylabeltext=r'T  [$^\circ C \,$]',
        xlabelfontsize=14,
        ylabelfontsize=14,
        xownticks=[10, 60, 600, 3600, 24*3600, 20*24*3600],
        yownticks=[0.1+i*0.1 for i in range(9)],
        xticklabels=['10s', '1min', '10min', '1h', '1d', '20d'],
        yticklabels=[0.1+i*0.1 for i in range(9)],
        labels={0: 'North',            # Outer ring
                1: 'Northwest',
                2: 'West',
                3: 'Southwest',
                4: 'South',
                5: 'Southeast',
                6: 'East',
                7: 'Northeast',
                8: 'North',            # Inner ring
                9: 'Northwest',
                10: 'West',
                11: 'Southwest',
                12: 'South',
                13: 'Southeast',
                14: 'East',
                15: 'Northeast'},
        coleros=['b', 'g', 'lightblue', 'cyan', 'r', 'chocolate', 'magenta',
                 'orange',
                 'b', 'g', 'lightblue', 'cyan', 'r', 'chocolate', 'magenta',
                 'orange'],
        xticklabelfontsize=20,
        yticklabelfontsize=20,
        pic_format='pdf',                        # 'png','eps','pdf'
):
    """
    A plotting function for means of single cell ensembles against observation
    time.

    Parameters
    ----------
    ax : Axes
        The axes to draw to.

    model_name : string
        String of model name.
        'wavebc' - Model wavebc
        'wavereal' - Model wavereal
        'wavewell' - Model wavewell
        'wave' - Model wave

    dat : string
        String with date of model run.

    let : string
        String of letter of model run.

    Returns
    -------
    ax : Axes
        Axes containing figure of variable array.

    pic_name : string
        Containing proposed saving location for Figure.
    """

    # Load single cell array
    num_locs = sc.num_single_cell(model_name, dat, let)
    var = np.load(
        pm.py_output_filename(
            sca.tag,
            'single_cell',
            sc.specl(model_name, dat, let)+'_'+str(num_locs),
            "npy",
        )
    )

    # Load time array
    t = sc.obstimes(model_name, dat, let)

    # Axis position
    if is_position:
        ax.set_position(position)

    # Title
    ax.set_title(axistitle, fontsize=30)

    # Plots
    nrobs_int = sc.nrobs_int(model_name, dat, let)
    [ax.semilogx(t, np.mean(var, axis=1)[:nrobs_int, i], 'o',
                 markersize=2, label=labels[i], c=coleros[ip])
     for ip, i in enumerate(points)]

    # Labels
    if is_labels:
        ax.set_xlabel(xlabeltext, fontsize=xlabelfontsize, labelpad=0)
        ax.set_ylabel(ylabeltext, fontsize=ylabelfontsize)

    # Ticks
    if is_ownticks:
        ax.xaxis.set_ticks(xownticks)
        ax.yaxis.set_ticks(yownticks)
    if is_ownticklabels:
        ax.xaxis.set_ticklabels(xticklabels, fontsize=xticklabelfontsize)
        ax.yaxis.set_ticklabels(yticklabels, fontsize=yticklabelfontsize)

    # Limits
    if is_ownlims:
        ax.xlim(xlims[0], xlims[1])
        ax.ylim(ylims[0], ylims[1])

    # Figure name
    pic_name = pm.py_output_filename(
        sca.tag,
        'single_cell',
        sc.specl(model_name, dat, let)+'_'+str(num_locs),
        pic_format
    )

    return ax, pic_name
