#+TITLE: pyshemkf: Python environment for handling SHEMAT-Suite output of EnKF simulations
#+AUTHOR: Johannes Keller

=pyshemkf= (=py= thon environment for handling =shem= at-suite output
of en =kf= simulations) is a python environment for post-processing
SHEMAT-Suite ([[*Rath 2006][Rath 2006]]) output.

=pyshemkf= can generate graphs and 2D-figures of variables and
parameters provided by typical output of SHEMAT-Suite.

Additionally, =pyshemkf= contains scripts and functions for the
evaluation and visualization of RMSE distributions from Ensemble
Kalman Filter (EnKF, [[*Evensen 2003][Evensen 2003]]) synthetic experiments computed with
SHEMAT-Suite.

-----
* Prerequisites
The scripts are written for =python2.7.12=. They make use of the
following Python modules:
- =matplotlib=, =matplotlib.pyplot=, =matplotlib.cm=,
  =matplotlib.colors=, =matplotlib.mlab= are used for plotting
- =numpy=, =scipy=, =scipy.stats= provide numerical and matrix
  functions
- =shutil=, =os=, =subprocess=, =shlex= are used to run commands on
  the operating system
- =string= provides string manipulation utilities
- =exceptions= is used for exception handling
- =vtk= and =h5py= provide functions to read vtk and hdf files.

For the included module =pskf= to be loaded by Python, its path has to
be added to the environment variable =PYTHONPATH=:
#+BEGIN_SRC sh
  export PYTHONPATH=${PYTHONPATH}:<path_to>/pyshemkf/site-packages
#+END_SRC

* General information
First, the directory structure of =pyshemkf= is explained. Then, a
naming convention for directories of SHEMAT-Suite output is
introduced. This naming convention is required for compatibility with
=pyshemkf=.
** pyshemkf structure
There are three directories in the root directory of =pyshemkf=: One
for output, one for IPython-scripts and one for the Python module
=pskf=.
*** =output/=
Directory for all output. =output/= has one subdirectory for each tag
(see [[*Tags][Tags]]). Each of these tag-subdirectories contains subdirectories,
whose names correspond to file endings: =npy/=, =png/=, =pdf/= and
=eps/=. The scripts of =pyshemkf= write output of a format to the
directory with the corresponding name. Example:
#+BEGIN_SRC sh
  $HOME/pyshemkf/output/pdf/example_output.pdf
#+END_SRC

The directories =dists= ([[output/dists/]]) and =specs= ([[output/specs/]])
contain only numpy arrays in the subdirectory =npy/=. =dists= contains
RMSE distributions, =specs= contains specifications of the simulated
model (for example the discretization).
*** =/scripts=
IPython scripts for reading and plotting SHEMAT-Suite output sorted by
tags (see [[*Tags][Tags]], [[*Scripts][Scripts]]).
*** =/site-packages/pskf=
Module containing functions used by the IPython scripts of =pyshemkf=.
Some functions (for reading and plotting) are meant to be used by
specific IPython scripts in =/scripts=, others are general functions
used throughout =pyshemkf= (see [[*Module =pskf=][Module =pskf=]]).

For the module =pskf= to be loaded by Python, its path has to be added
to the environment variable =PYTHONPATH= (see [[*Prerequisites][Prerequisites]]).
** SHEMAT-Suite output directory
=pyshemkf= needs a specific naming convention of SHEMAT-Suite output
directories. A single output directory should be named as follows:
#+BEGIN_SRC sh
  $HOME/shematOutputDir/<model_name>_output/<dat>/<dat>_<let>
#+END_SRC
An example with =<model_name>=wavereal=, =<dat>=2010_01_30=,
=<let>=a=:
#+BEGIN_SRC sh
  $HOME/shematOutputDir/wavereal_output/2010_01_30/2010_01_30_a
#+END_SRC
Inside the SHEMAT-Suite output directories, input files are saved
alongside output directories.

- Input files
  - general input file =<MODEL_NAME>= (=WAVEREAL=)
  - true input file =<MODEL_NAME>_TRUE= (=WAVEREAL_TRUE=)
  - EnKF input file =<MODEL_NAME>.enkf= (=WAVEREAL.enkf=)
  - SGSim input files =sgsim_k_<modelname>_true.par=
    (=sgsim_k_wavereal_true=), =sgsim_k_<modelname>.par=
    (=sgsim_k_wavereal=)
- Output directories
  - =samples_output/=: forward output
  - =enkf_output/=: EnKF output
  - =single_cell_output/=: output at single cells
* Tags
Tags are used to organize different groups of read and plot
routines. They determine the output-path, the script-path and the path
of to the function definitions of =pskf=.

There are two groups of tags in =pyshemkf=, corresponding roughly to
the following functionalities: =analysis=, =forward=, =monitor= and
=singlecell= are scripts reading general SHEMAT-Suite.  =errorplot=,
=gaussianity= and =numcomp= provide visualization of RMSE
distributions of large numbers of EnKF synthetic experiments.
** =analysis=
2D-Images of ensemble mean variable/parameter fields or single
realization variable/parameter fields from EnKF-simulations in
SHEMAT-Suite.
** =errorplot=
Figures showing RMSE means of different EnKF-methods.
** =forward=
2D-Images of variable/parameter fields in a single forward run of
SHEMAT-Suite.
** =gaussianity=
RMSE distributions from a large number of EnKF synthetic experiments
with SHEMAT-Suite.
** =monitor=
Visualizing monitoring point output from SHEMAT-Suite.
** =numcomp=
Matrix plots visualizing RMSE statistics from a large number of EnKF
synthetic experiments with SHEMAT-Suite.
** =singlecell=
Visualizing single cell output from SHEMAT-Suite.
* Scripts
** endresread.ipy
The script =endresread.ipy= ([[scripts/endresread.ipy]]) is not part of
one of the scripting tags. It has the preliminary task of reading RMSE
distributions from =SHEMAT-Suite= output.
** tag-scripts
For each tag, there is a runplot.ipy general script that calls the
read and plot functions from =pskf= (see [[*Module =pskf=][Module =pskf=]]). If wanted,
numpy arrays and figures are saved, figures are shown and a backup of
the script is generated in the corresponding =backup= directory.
** templates
A =/scripts/templates= directory will not be part of the
git-repository and can for example be used for new scripts, before
they are ready to be committed to the repository.
* Module =pskf=
** scripts
The functions in the =scripts= directory
([[/site-packages/pskf/scripts/]]) are tag-specific, i.e. they are meant
to be used by the =runplot.ipy= scripts under a certain tag (for
example =analysis=). Three typical file types exist in one tag
directory:
- =read.py= (Example
  [[/site-packages/pskf/scripts/analysis/read.py]]) contains
  functions for reading the specific SHEMAT-Suite output needed under
  a tag and turning the output into numpy arrays.
- =plot.py= (Example
  [[/site-packages/pskf/scripts/analysis/plot.py]]) contains
  functions for plotting the numpy arrays read in under =read.py=.
- =arrays.py= or =variables.py= (Example
  [[/site-packages/pskf/scripts/analysis/arrays.py]]) contain useful
  tag-specific variables and arrays. One example is the tag name
  itself.
** tools
The =tools= directory ([[/site-packages/pskf/tools/]]) contains general
functions (opposed to the tag-specific functions in =scripts=).
*** plot
General variables and functions related to plotting.
**** plotarrays
Important collection of dates, letters, number of runs and number of
observations for different EnKF runs. According to this information,
specifiers for the different output are defined and standardized.
**** plotfunctions
Plotting functions for handling vtk-input, grid properties, colormaps,
colorbars, scatterplots, hdf (not yet fully tested).
**** specs
Utility functions for reading grid properties from SHEMAT-Suite output
files in SHEMAT-Suite output directories. Important functions defining
the specifiers used to standardize output of the IPython scripts.
*** run
**** pythonmodule
Python-related directory variables
- =python_dir=
- =python_scripts_dir=
- =python_output_dir=
Python-related functions for generating specific directories,
filenames for saving and backups.
**** runmodule
General utility functions for replacing strings, make temporal files,
handling letter endings of specifiers, running shell scripts, reading
and manipulating SHEMAT-Suite input files, compiling SHEMAT, running
matlab, generating lists of SHEMAT-Suite specific files and
directories. Some of these functions are used in scripts to run
SHEMAT-Suite that are not part of the =pyshemkf= repository.
* References
** Rath 2006
Rath, V., Wolf, A., & Bücker, H. M., Joint three-dimensional inversion
of coupled groundwater flow and heat transfer based on automatic
differentiation: sensitivity calculation, verification, and synthetic
examples, Geophysical Journal International, 167(1), 453–466 (2006).
[[http://dx.doi.org/10.1111/j.1365-246x.2006.03074.x]]
** Evensen 2003
Evensen, G., The ensemble kalman filter: theoretical formulation and
practical implementation, Ocean Dynamics, 53(4), 343–367 (2003).
[[http://dx.doi.org/10.1007/s10236-003-0036-9]]
